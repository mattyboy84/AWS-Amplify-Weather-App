image: amazon/aws-sam-cli-build-image-nodejs14.x:latest

stages:
  - backend
  - update-frontend
  
variables:
  STACK_NAME: weather-app-2-backend
  REGION: eu-west-2
  REPO_ID: $FRONTEND_REPO_PROJECT_ID # id of frontend nextjs repo to link to amplify
  REPO_TOKEN: $AMPLIFY_TOKEN # CICD token variable that allows read repository on the chosen project id
  DEV_REPO_BRANCH: dev
  PROD_REPO_BRANCH: main

backend:
  stage: backend
  script:
    # use the REPO_ID to get the repo's path_with_namespace. e.g. 'groupA/groupB/reponame' this is overriden to CF Template
    - >
      REPO_URL=https://gitlab.com/$(curl --request GET --header "PRIVATE-TOKEN: ${REPO_TOKEN}" "https://gitlab.com/api/v4/projects/$REPO_ID" | jq -r '.path_with_namespace')
    - echo $REPO_URL
    #
    - sam build
    - sam package --output-template-file packaged.yaml --s3-bucket $S3_DEPLOY_BUCKET --region $REGION
    - sam deploy --no-fail-on-empty-changeset --template-file packaged.yaml --stack-name $STACK_NAME --s3-bucket $S3_DEPLOY_BUCKET --capabilities CAPABILITY_NAMED_IAM --region $REGION --parameter-overrides AmplifyAppRepoURL=$REPO_URL AmplifyAppRepoToken=$REPO_TOKEN AmplifyAppRepoBranch=$PROD_REPO_BRANCH WeatherToken=$WEATHER_API_TOKEN
    # the amplify app will create a webhook that updates on every commit - we don't want that, we want to control when it runs from the CICD
    # deleting the amplify made webhook if its present.
    - >
      WEBHOOK_ID=$(curl --request GET --header "PRIVATE-TOKEN: ${REPO_TOKEN}" "https://gitlab.com/api/v4/projects/$REPO_ID/hooks" | jq -r '.[0].id')
    - >
      if [ -n "$WEBHOOK_ID" ]; then curl --request DELETE --header "PRIVATE-TOKEN: ${REPO_TOKEN}" "https://gitlab.com/api/v4/projects/$REPO_ID/hooks/$WEBHOOK_ID"; fi
  
update-frontend:
  stage: update-frontend
  script:
    # get the app id & branch name then telling amplify to build from most recent commit
    - AMPLIFY_APP_ID=$(aws cloudformation --region $REGION describe-stacks --stack-name $STACK_NAME --query "Stacks[0].Outputs[?OutputKey=='AmplifyAppId'].OutputValue" --output text)
    - AMPLIFY_BRANCH_NAME=$(aws cloudformation --region $REGION describe-stacks --stack-name $STACK_NAME --query "Stacks[0].Outputs[?OutputKey=='AmplifyAppBranchName'].OutputValue" --output text)
    ###
    - aws amplify start-job --app-id ${AMPLIFY_APP_ID} --branch-name ${AMPLIFY_BRANCH_NAME} --job-type RELEASE
  when: manual
